package persistence

import (
	"database/sql"
	"errors"
	"strings"

	_ "github.com/lib/pq"
	"github.com/spf13/viper"
	"polygon.am/core/pkg/persistence/codegen"
)

// This exported variable contains all the queries generated
// by sqlc for usage with PostgreSQL.
var Queries *codegen.Queries

// This function will attempt to open a connection to the specified
// PostgreSQL URL and initialize the queries generated by sqlc.
func Connect() error {
	// Getting the PostgreSQL connection string from the config
	// using viper.
	dsn := viper.GetString("polygon.persistence.postgres")
	if strings.Trim(dsn, " ") == "" {
		return errors.New("postgres dsn string cannot be empty.")
	}

	// Attempting to open a connection to PostgreSQL
	if conn, err := sql.Open("postgres", dsn); err != nil {
		defer conn.Close()
		return err
	} else {
		// Executing a ping request to PostgreSQL, to completely
		// verify that the connection has been established successfully.
		if err := conn.Ping(); err != nil {
			return err
		} else {
			// Assigning the connection to all the queries for global
			// usage.
			Queries = codegen.New(conn)
			return nil
		}
	}
}
